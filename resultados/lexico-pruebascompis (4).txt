palabra_reservada => main
caracter_simple => {
palabra_reservada => int
id => x
caracter_simple => ,
id => y
caracter_simple => ,
id => z
palabra_reservada => float
id => a
caracter_simple => ,
id => b
caracter_simple => ,
id => c
caracter_simple => ;
id => suma
asignacion => :=
entero => 45
caracter_simple => ;
id => x
asignacion => :=
float => 32.32
caracter_simple => ;
id => x
asignacion => :=
entero => 23
caracter_simple => ;
id => y
asignacion => :=
entero => 2
operador => +
entero => 3
operador => -
entero => 1
caracter_simple => ;
id => z
id => y
operador => +
entero => 7
caracter_simple => ;
id => y
asignacion => :=
id => y
operador => +
entero => 1
caracter_simple => ;
id => a
asignacion => :=
float => 24.0
operador => +
entero => 4
operador => -
entero => 1
operador => /
entero => 3
operador => *
entero => 2
operador => +
entero => 34
operador => -
entero => 1
caracter_simple => ;
id => x
asignacion => :=
entero => 5
operador => -
entero => 3
caracter_simple => )
operador => *
caracter_simple => (
entero => 8
operador => /
entero => 2
caracter_simple => )
caracter_simple => ;
id => y
asignacion => :=
entero => 5
operador => +
entero => 3
operador => -
entero => 2
operador => *
entero => 4
operador => /
entero => 7
operador => -
entero => 9
caracter_simple => ;
id => z
asignacion => :=
entero => 8
operador => /
entero => 2
operador => +
entero => 15
operador => *
entero => 4
caracter_simple => ;
id => y
asignacion => :=
float => 14.54
caracter_simple => ;
palabra_reservada => if
caracter_simple => (
entero => 23
caracter_simple => )
palabra_reservada => then
id => y
asignacion => :=
id => a
operador => +
entero => 3
caracter_simple => ;
palabra_reservada => end
caracter_simple => ;
id => a
incremento => ++
caracter_simple => ;
id => c
decremento => --
caracter_simple => ;
id => x
asignacion => :=
entero => 3
operador => +
entero => 4
caracter_simple => ;
palabra_reservada => do
id => y
asignacion => :=
caracter_simple => (
id => y
operador => +
entero => 1
caracter_simple => )
operador => *
entero => 2
operador => +
entero => 1
caracter_simple => ;
palabra_reservada => while
caracter_simple => (
id => x
mayor => >
entero => 7
caracter_simple => )
caracter_simple => {
id => x
asignacion => :=
entero => 6
operador => +
entero => 8
operador => /
entero => 9
operador => *
entero => 8
operador => /
entero => 3
caracter_simple => ;
palabra_reservada => cin
id => x
caracter_simple => ;
id => mas
asignacion => :=
entero => 36
operador => /
entero => 7
caracter_simple => ;
caracter_simple => }
palabra_reservada => until
caracter_simple => (
id => y
comparacion => ==
entero => 5
caracter_simple => )
caracter_simple => ;
palabra_reservada => while
caracter_simple => (
id => y
comparacion => ==
entero => 0
caracter_simple => )
caracter_simple => {
palabra_reservada => cin
id => mas
caracter_simple => ;
palabra_reservada => cout
id => x
operador => +
entero => 3
operador => *
entero => 5
caracter_simple => ;
caracter_simple => }
caracter_simple => }

